$gap: 4vh;
$padding: 4vh;
$color: #48cae4;

$bp: (
  mobile: 480px,
  tablet: 768px,
  desktop: 1440px,
);

@mixin query($display) {
  @each $key, $value in $bp {
    //  defining max-width
    @if ($display == $key) {
      @media (max-width: $value) {
        @content;
      }
    }
  }
}

//Changing The Default Settings..

* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;

  // Changing the body here

  body {
    width: 100%;
    min-height: 100vh;
    font-family: sans-serif;
    font-size: 45px;
  }
}

.container {
  display: flex;
  flex-direction: column;
  padding: $padding;
  gap: $gap;
}
[class^="block-"] {
  display: flex;
  flex-direction: row;
  gap: $gap;
}

[class^="box-"] {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1vh solid $color;
  border-radius: 10px;
}

.box-1,
.box-5 {
  flex-basis: 100%;
  height: 20vh;
}
.box-3 {
  flex-basis: 60%;
  height: 60vh-2 * $gap -2 * $padding;
}
.box-2,
.box-4 {
  flex-basis: 20%;
}


@include query(mobile){
    .block-2{
        flex-direction:column;
        height: 60vh;
    }
    .box-2{
        display: none;
    }
    .box-3{
        flex-basis: 80%;
    }
    .box-4{
        flex-basis: 20%;
    }
}
